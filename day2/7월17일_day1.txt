----------7/17-day1-----------------------

1)HTML5 info.

	마크업 : 텍스트의 추가적인 정보를 제공하는 것
	html : 웹페이지의 content 와 structure를 담당하는 언어
	<태그를 통해 정보를 구조화 하는 것이다.>

	HTML : markup language
	CSS : style sheet language
	JS : programming language

	html5 = html + css + js

*change point*
	-multimedia : 비디오, 오디오 기능지원
	-SVG, 캔버스 = 2차원 그래픽
	 CSS3, WebGL = 3차원 그래픽
	-connectivity(통신) : 양방향 통신
	-device access : 카메라, 동작센서 하드웨어 직접제어
	-semantics : 시멘틱웹 실현
	-CSS3 완벽지원

2) HTML 문법

	시작 : <!DOCTYPE html>
	h1 태그 : 제목 //굵은 글씨로 표현
	emit : 탭키로 태그를 생성

3) 기본 문법

	element(요소) : 태그 & 컨텐츠 (태그 : 태그를 열면 반드시 닫아줘야 한다.)
	ex) p태그 : 단락
<요소의 중첩>
	ex)body태그 안에 h1태그와 p태그가 같이 있을 수 있다.
	html태그 : head 태그(meta 데이터를 전달하기 위함) & body 태그(컨텐츠 작성 영역)
	intent : 들여쓰기
<빈 요소>
	태그안에 컨텐츠가 없는 요소. 닫는 태그도 없다. 
	태그와 함께 어트리뷰트만 가진다.

<어트리뷰트>
	attribute(속성) : 개체나 특징을 나열한 것.
	ex) <img src = "esr.png"> -> src : 어트리뷰트명, esr.png : 어트리뷰트 값
	
<글로벌 어트리뷰트>
	어떠한 태그에도 모두 사용할 수 있는 어트리뷰트
	*id* = 유일요소. 중복 지정이 불가능
	*class* = 스타일 시트에 정의된 class를 요소에 지정.중복지정이 가능. 
<커멘츠(주석)>
	코드를 설명하는 것. 브라우저는 주석을 화면에 표시하지 않는다.

*웹 & 인터넷*
	인터넷 : 컴퓨터와 컴퓨터의 통신
	웹 : 브라우저(클라이언트)와 웹서버(서버)의 통신
	<브라우저가 웹서버에게 리퀘스트할 의무와 웹서버가 브라우저에게 리스펀스할 의무가 있다.>
	
4) 시멘틱 웹(Semantic Web)

	스타일은 css에서만 관할하는 것이 좋은 html&css 코딩. 
	검색엔진과 사람들에게 컨텐츠의 중요도와 의미를 강조하는 태그 = 시멘틱 태그
	ex) h1 : 제목중에서 가장 중요한 제목 (1~6까지 있다.)
	
	*html의 semantic element 표 참조*
	semantic 태그 적극적 활용이 중요!

5) 태그

	-문서형식 정의 
	DTD태그 : <!DOCTYPE html> -> 가장 맨 위에 위치해야 한다.
	-html 태그 : 모든 요소는 html의 자식 요소. DTD는 예외.
	-head 태그 : 메타데이터를 포함하기 위한 요소.  메타데이터 이외 요소는 포함 안됨.
		-title 태그 : 문서의 제목을 정의. 브라우저 탭에 표시.
		- charset 어트리뷰트 : 다국어를 위한 텍스트 포맷 지정
		-style 태그 : css 정의 (분리하는 것이 통상적)
		-link 태그 : 외부 리소스와의 연계 정보를 정의
		-script 태그 : 클라이언트 사이드 js를 정의한다.(src 어트리뷰트를 사용하면 jsp 파일로드 가능)
		-meta 태그 : 메타데이터를 정의
	-body 태그 : html 문서의 컨텐츠를 나타냄. 페이지에 단 하나만 존재.

*디렉터리*
	os 마다 디렉토리 경로를 탐색하는 방법이 약간씩 다르다. 경로표현.
	MAC : / : 루트 디렉토리
	     ~ : 홈디렉토리
	    cd : 디렉토리 이동
	
*npm browser-sync 오류 해결*
	browser-sync start --server --files ./tag1.html
